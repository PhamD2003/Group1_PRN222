@{
    ViewData["Title"] = "Thanh to√°n";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var cartItems = ViewBag.CartItems as List<Group1_PRN222.Models.CartItem>;
    var userAddresses = ViewBag.UserAddresses as List<Group1_PRN222.Models.Address>;
    var defaultAddress = ViewBag.DefaultAddress as Group1_PRN222.Models.Address;
    var subtotal = (decimal)ViewBag.Subtotal;
    var discountAmount = (decimal)(ViewBag.DiscountAmount ?? 0);
    var shippingFee = (decimal)ViewBag.ShippingFee;
    var total = (decimal)ViewBag.Total;
    var appliedCouponCode = ViewBag.AppliedCouponCode as string;
    var couponResult = ViewBag.CouponResult as Group1_PRN222.Services.CouponValidationResult;
}

<div class="container mt-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Product">Trang ch·ªß</a></li>
                    <li class="breadcrumb-item"><a href="/Cart">Gi·ªè h√†ng</a></li>
                    <li class="breadcrumb-item active">Thanh to√°n</li>
                </ol>
            </nav>
            <h2 class="fw-bold">üõí Thanh to√°n ƒë∆°n h√†ng</h2>
        </div>
    </div>

    <!-- Progress Steps -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="bg-success text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 30px; height: 30px;">
                        <small>1</small>
                    </div>
                    <div class="ms-2">
                        <div class="fw-bold">Gi·ªè h√†ng</div>
                        <div class="small text-success">Ho√†n th√†nh</div>
                    </div>
                </div>
                <div class="flex-grow-1 mx-3" style="height: 2px; background-color: #28a745;"></div>
                <div class="d-flex align-items-center">
                    <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 30px; height: 30px;">
                        <small>2</small>
                    </div>
                    <div class="ms-2">
                        <div class="fw-bold">Thanh to√°n</div>
                        <div class="small text-primary">ƒêang x·ª≠ l√Ω</div>
                    </div>
                </div>
                <div class="flex-grow-1 mx-3" style="height: 2px; background-color: #e9ecef;"></div>
                <div class="d-flex align-items-center">
                    <div class="bg-secondary text-white rounded-circle d-flex align-items-center justify-content-center" style="width: 30px; height: 30px;">
                        <small>3</small>
                    </div>
                    <div class="ms-2">
                        <div class="fw-bold">Ho√†n th√†nh</div>
                        <div class="small mt-2">Ch·ªù x·ª≠ l√Ω</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Messages -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>‚ùå L·ªói:</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <!-- Main Checkout Form -->
        <div class="col-lg-8">
            <form id="checkoutForm">
                <!-- ƒê·ªãa ch·ªâ giao h√†ng -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">üìç ƒê·ªãa ch·ªâ giao h√†ng</h5>
                    </div>
                    <div class="card-body">
                        @if (userAddresses != null && userAddresses.Any())
                        {
                            <input type="hidden" id="selectedAddressId" value="@(defaultAddress?.Id ?? userAddresses.First().Id)" />

                            @foreach (var address in userAddresses)
                            {
                                <div class="address-option mb-3">
                                    <div class="p-3 border rounded @(address.IsDefault == true ? "border-primary bg-light" : "")">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <h6 class="fw-bold mb-1">@address.FullName</h6>
                                                <p class="mb-1 text-muted">üìû @address.Phone</p>
                                                <p class="mb-1">üìç @address.Street</p>
                                                <p class="mb-0">@address.City, @address.State, @address.Country</p>
                                                @if (address.IsDefault == true)
                                                {
                                                    <span class="badge bg-success mt-2">ƒê·ªãa ch·ªâ m·∫∑c ƒë·ªãnh</span>
                                                }
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input address-radio" type="radio"
                                                       name="selectedAddress" value="@address.Id"
                                                @(address.IsDefault == true || address == userAddresses.First() ? "checked" : "")>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="mt-3">
                                <a href="/Account/Edit/@(ViewContext.HttpContext.Session.GetInt32("UserId"))"
                                   class="btn btn-outline-primary btn-sm">
                                    ‚ûï Th√™m ƒë·ªãa ch·ªâ m·ªõi
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <h6>‚ö†Ô∏è Ch∆∞a c√≥ ƒë·ªãa ch·ªâ giao h√†ng</h6>
                                <p class="mb-2">B·∫°n c·∫ßn th√™m √≠t nh·∫•t m·ªôt ƒë·ªãa ch·ªâ giao h√†ng ƒë·ªÉ ti·∫øp t·ª•c ƒë·∫∑t h√†ng.</p>
                                <a href="/Account/Edit/@(ViewContext.HttpContext.Session.GetInt32("UserId"))"
                                   class="btn btn-primary">
                                    ‚ûï Th√™m ƒë·ªãa ch·ªâ ngay
                                </a>
                            </div>
                        }
                    </div>
                </div>

                <!-- Ph∆∞∆°ng th·ª©c thanh to√°n -->
                @if (userAddresses != null && userAddresses.Any())
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-success text-white">
                            <h5 class="mb-0">üí≥ Ph∆∞∆°ng th·ª©c thanh to√°n</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="payment-option p-3 border rounded">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="paymentMethod"
                                                   id="paymentCOD" value="COD" checked>
                                            <label class="form-check-label fw-bold" for="paymentCOD">
                                                üöö Thanh to√°n khi nh·∫≠n h√†ng (COD)
                                            </label>
                                        </div>
                                        <small class="text-muted">B·∫°n s·∫Ω thanh to√°n khi nh·∫≠n ƒë∆∞·ª£c h√†ng</small>
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="payment-option p-3 border rounded">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="paymentMethod"
                                                   id="paymentPayPal" value="PayPal">
                                            <label class="form-check-label fw-bold" for="paymentPayPal">
                                                üí∞ PayPal (M√¥ ph·ªèng)
                                            </label>
                                        </div>
                                        <small class="text-muted">Thanh to√°n online qua PayPal</small>
                                    </div>
                                </div>
                            </div>

                            <!-- PayPal Details (Hidden by default) -->
                            <div id="paypalDetails" class="mt-3" style="display: none;">
                                <div class="alert alert-info">
                                    <h6>üîí PayPal Checkout (Demo)</h6>
                                    <p class="mb-2">ƒê√¢y l√† ch·ª©c nƒÉng m√¥ ph·ªèng. Trong th·ª±c t·∫ø s·∫Ω redirect ƒë·∫øn PayPal.</p>
                                    <button type="button" class="btn btn-primary btn-sm">
                                        Continue with PayPal ‚Üí
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- M√£ gi·∫£m gi√° Section -->
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-warning text-dark">
                            <h5 class="mb-0">üé´ M√£ gi·∫£m gi√°</h5>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(appliedCouponCode) && couponResult?.IsValid == true)
                            {
                                <!-- Applied Coupon Display -->
                                <div id="appliedCouponSection" class="alert alert-success">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">‚úÖ M√£ gi·∫£m gi√° ƒë√£ √°p d·ª•ng</h6>
                                            <div class="fw-bold">@appliedCouponCode</div>
                                            <small class="text-muted">@couponResult.SuccessMessage</small>
                                            <div class="mt-1">
                                                <span class="badge bg-danger">Gi·∫£m @discountAmount.ToString("N0") ‚Ç´</span>
                                            </div>
                                        </div>
                                        <button type="button" id="removeCouponBtn" class="btn btn-outline-danger btn-sm">
                                            ‚ùå G·ª° b·ªè
                                        </button>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <!-- Coupon Input Form -->
                                <div id="couponInputSection">
                                    <div class="mb-3">
                                        <label class="form-label">Nh·∫≠p m√£ gi·∫£m gi√°:</label>
                                        <div class="input-group">
                                            <input type="text" id="couponCodeInput" class="form-control"
                                                   placeholder="Nh·∫≠p m√£ gi·∫£m gi√°..." maxlength="50">
                                            <button type="button" id="applyCouponBtn" class="btn btn-warning">
                                                √Åp d·ª•ng
                                            </button>
                                        </div>
                                        <div id="couponMessage" class="mt-2" style="display: none;"></div>
                                    </div>

                                    <!-- Available Coupons Hint -->
                                    <div class="text-center">
                                        <button type="button" id="showAvailableCoupons" class="btn btn-link btn-sm">
                                            üìã Xem m√£ gi·∫£m gi√° kh·∫£ d·ª•ng
                                        </button>
                                    </div>
                                </div>
                            }

                            <!-- Available Coupons Modal Trigger Section -->
                            <div id="availableCouponsSection" class="mt-3" style="display: none;">
                                <h6>üéØ M√£ gi·∫£m gi√° kh·∫£ d·ª•ng cho ƒë∆°n h√†ng n√†y:</h6>
                                <div id="availableCouponsList" class="row">
                                    <!-- Will be populated by JavaScript -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Ghi ch√∫ ƒë∆°n h√†ng -->
                    <div class="card shadow-sm mb-4">
                        <div class="card-header bg-info text-white">
                            <h5 class="mb-0">üìù Ghi ch√∫ ƒë∆°n h√†ng (t√πy ch·ªçn)</h5>
                        </div>
                        <div class="card-body">
                            <textarea class="form-control" id="orderNotes" rows="3"
                                      placeholder="Nh·∫≠p ghi ch√∫ cho ƒë∆°n h√†ng (v√≠ d·ª•: giao h√†ng v√†o bu·ªïi chi·ªÅu, g·ªçi tr∆∞·ªõc khi giao...)"></textarea>
                        </div>
                    </div>
                }
            </form>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card shadow-sm position-sticky" style="top: 20px;">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">üìã T√≥m t·∫Øt ƒë∆°n h√†ng</h5>
                </div>
                <div class="card-body">
                    <!-- Cart Items -->
                    @if (cartItems != null && cartItems.Any())
                    {
                        @foreach (var item in cartItems)
                        {
                            <div class="d-flex align-items-center mb-3 pb-3 border-bottom">
                                <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/placeholder.jpg" : item.ImageUrl)"
                                     alt="@item.ProductName" class="rounded" style="width: 60px; height: 60px; object-fit: cover;">
                                <div class="flex-grow-1 ms-3">
                                    <h6 class="mb-1">@item.ProductName</h6>
                                    <small class="text-muted">SL: @item.Quantity</small>
                                    <div class="fw-bold text-primary">@item.TotalPrice.ToString("N0") ‚Ç´</div>
                                </div>
                            </div>
                        }
                    }

                    <!-- Pricing Summary -->
                    <div class="pricing-summary">
                        <div class="d-flex justify-content-between mb-2">
                            <span>T·∫°m t√≠nh:</span>
                            <span id="subtotalAmount">@subtotal.ToString("N0") ‚Ç´</span>
                        </div>
                        @if (discountAmount > 0)
                        {
                            <div class="d-flex justify-content-between mb-2 text-success">
                                <span>üí∞ Gi·∫£m gi√°:</span>
                                <span id="discountAmountDisplay">-@discountAmount.ToString("N0") ‚Ç´</span>
                            </div>
                        }
                        else
                        {
                            <div id="discountRow" class="d-flex justify-content-between mb-2 text-success" style="display: none !important;">
                                <span>üí∞ Gi·∫£m gi√°:</span>
                                <span id="discountAmountDisplay">-0 ‚Ç´</span>
                            </div>
                        }
                        <div class="d-flex justify-content-between mb-2">
                            <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                            <span id="shippingFeeAmount">@shippingFee.ToString("N0") ‚Ç´</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold fs-5">
                            <span>T·ªïng c·ªông:</span>
                            <span class="text-danger" id="totalAmount">@total.ToString("N0") ‚Ç´</span>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    @if (userAddresses != null && userAddresses.Any())
                    {
                        <div class="mt-4">
                            <button type="button" id="btnPlaceOrder" class="btn btn-danger btn-lg w-100 mb-2">
                                üõí ƒê·∫∑t h√†ng ngay
                            </button>
                            <a href="/Cart" class="btn btn-outline-secondary w-100">
                                ‚Üê Quay l·∫°i gi·ªè h√†ng
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="mt-4">
                            <button type="button" class="btn btn-secondary btn-lg w-100" disabled>
                                C·∫ßn th√™m ƒë·ªãa ch·ªâ ƒë·ªÉ ƒë·∫∑t h√†ng
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center py-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <h5>ƒêang x·ª≠ l√Ω ƒë∆°n h√†ng...</h5>
                <p class="text-muted">Vui l√≤ng ƒë·ª£i trong gi√¢y l√°t</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize coupon functionality
            initializeCouponHandlers();

            // Handle address selection
            $('.address-radio').change(function() {
                if ($(this).is(':checked')) {
                    $('#selectedAddressId').val($(this).val());

                    // Update visual selection
                    $('.address-option .border').removeClass('border-primary bg-light');
                    $(this).closest('.address-option').find('.border').addClass('border-primary bg-light');
                }
            });

            // Handle payment method selection
            $('input[name="paymentMethod"]').change(function() {
                if ($(this).val() === 'PayPal') {
                    $('#paypalDetails').slideDown();
                } else {
                    $('#paypalDetails').slideUp();
                }
            });

            // Handle place order
            $('#btnPlaceOrder').click(function() {
                var addressId = $('#selectedAddressId').val();
                var paymentMethod = $('input[name="paymentMethod"]:checked').val();
                var notes = $('#orderNotes').val();

                if (!addressId) {
                    alert('Vui l√≤ng ch·ªçn ƒë·ªãa ch·ªâ giao h√†ng!');
                    return;
                }

                if (!paymentMethod) {
                    alert('Vui l√≤ng ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n!');
                    return;
                }

                // Show loading
                $('#loadingModal').modal('show');

                // Submit order
                $.ajax({
                    url: '/Order/Checkout',
                    type: 'POST',
                    data: {
                        addressId: addressId,
                        paymentMethod: paymentMethod,
                        notes: notes,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        $('#loadingModal').modal('hide');

                        if (response.success) {
                            // Show success message
                            alert('‚úÖ ' + response.message);

                            // Redirect to order details
                            window.location.href = '/Order/Details/' + response.orderId;
                        } else {
                            alert('‚ùå ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        $('#loadingModal').modal('hide');
                        alert('‚ùå C√≥ l·ªói x·∫£y ra khi ƒë·∫∑t h√†ng. Vui l√≤ng th·ª≠ l·∫°i!');
                        console.error('Error:', error);
                    }
                });
            });

            // Add anti-forgery token
            if (!$('input[name="__RequestVerificationToken"]').length) {
                $('body').append('@Html.AntiForgeryToken()');
            }
        });

        // Initialize coupon functionality
        function initializeCouponHandlers() {
            // Apply coupon button
            $('#applyCouponBtn').click(function() {
                var couponCode = $('#couponCodeInput').val().trim();
                if (couponCode) {
                    applyCoupon(couponCode);
                } else {
                    showCouponMessage('Vui l√≤ng nh·∫≠p m√£ gi·∫£m gi√°.', 'error');
                }
            });

            // Enter key in coupon input
            $('#couponCodeInput').keypress(function(e) {
                if (e.which === 13) {
                    $('#applyCouponBtn').click();
                }
            });

            // Remove coupon button
            $('#removeCouponBtn').click(function() {
                removeCoupon();
            });

            // Show available coupons
            $('#showAvailableCoupons').click(function() {
                loadAvailableCoupons();
            });

            // Real-time coupon validation (optional)
            $('#couponCodeInput').on('input', function() {
                var couponCode = $(this).val().trim();
                if (couponCode.length >= 3) {
                    clearTimeout(window.couponValidationTimeout);
                    window.couponValidationTimeout = setTimeout(function() {
                        validateCouponRealtime(couponCode);
                    }, 500);
                } else {
                    hideCouponMessage();
                }
            });
        }

        // Apply coupon
        function applyCoupon(couponCode) {
            $('#applyCouponBtn').prop('disabled', true).text('ƒêang √°p d·ª•ng...');

            $.ajax({
                url: '/Order/ApplyCoupon',
                type: 'POST',
                data: {
                    couponCode: couponCode,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        // Update pricing display
                        updatePricingDisplay(response);

                        // Show applied coupon section
                        showAppliedCoupon(couponCode, response);

                        showCouponMessage(response.message, 'success');

                        // Hide input section after short delay
                        setTimeout(function() {
                            location.reload(); // Refresh to show applied coupon properly
                        }, 1500);
                    } else {
                        showCouponMessage(response.message, 'error');
                    }
                },
                error: function() {
                    showCouponMessage('C√≥ l·ªói x·∫£y ra khi √°p d·ª•ng m√£ gi·∫£m gi√°.', 'error');
                },
                complete: function() {
                    $('#applyCouponBtn').prop('disabled', false).text('√Åp d·ª•ng');
                }
            });
        }

        // Remove coupon
        function removeCoupon() {
            $.ajax({
                url: '/Order/RemoveCoupon',
                type: 'POST',
                data: {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        // Update pricing display
                        updatePricingDisplay(response);

                        // Refresh page to show updated state
                        location.reload();
                    } else {
                        alert('‚ùå ' + response.message);
                    }
                },
                error: function() {
                    alert('‚ùå C√≥ l·ªói x·∫£y ra khi g·ª° b·ªè m√£ gi·∫£m gi√°.');
                }
            });
        }

        // Validate coupon in real-time (preview)
        function validateCouponRealtime(couponCode) {
            $.ajax({
                url: '/Order/ValidateCoupon',
                type: 'POST',
                data: {
                    couponCode: couponCode,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showCouponMessage(
                            `‚úÖ ${response.message} (Gi·∫£m ${response.discountAmount.toLocaleString()} ‚Ç´)`,
                            'success'
                        );
                    } else {
                        showCouponMessage(response.message, 'error');
                    }
                }
            });
        }

        // Load available coupons
        function loadAvailableCoupons() {
            $.ajax({
                url: '/Order/GetAvailableCoupons',
                type: 'GET',
                success: function(response) {
                    if (response.success && response.coupons.length > 0) {
                        displayAvailableCoupons(response.coupons);
                        $('#availableCouponsSection').slideDown();
                    } else {
                        showCouponMessage('Kh√¥ng c√≥ m√£ gi·∫£m gi√° n√†o kh·∫£ d·ª•ng cho ƒë∆°n h√†ng n√†y.', 'info');
                    }
                },
                error: function() {
                    showCouponMessage('C√≥ l·ªói x·∫£y ra khi t·∫£i m√£ gi·∫£m gi√°.', 'error');
                }
            });
        }

        // Display available coupons
        function displayAvailableCoupons(coupons) {
            var html = '';
            coupons.forEach(function(coupon) {
                html += `
                    <div class="col-md-6 mb-2">
                        <div class="card border-warning">
                            <div class="card-body p-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong class="text-warning">${coupon.Code}</strong>
                                        <br><small>${coupon.Description}</small>
                                        <br><small class="text-success">Gi·∫£m ~${coupon.EstimatedDiscount.toLocaleString()} ‚Ç´</small>
                                    </div>
                                    <button type="button" class="btn btn-warning btn-sm apply-coupon-btn"
                                            data-code="${coupon.Code}">
                                        √Åp d·ª•ng
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });

            $('#availableCouponsList').html(html);

            // Handle apply coupon from list
            $('.apply-coupon-btn').click(function() {
                var code = $(this).data('code');
                $('#couponCodeInput').val(code);
                applyCoupon(code);
            });
        }

        // Update pricing display
        function updatePricingDisplay(response) {
            $('#subtotalAmount').text(response.subtotal.toLocaleString() + ' ‚Ç´');
            $('#shippingFeeAmount').text(response.shippingFee.toLocaleString() + ' ‚Ç´');
            $('#totalAmount').text(response.total.toLocaleString() + ' ‚Ç´');

            if (response.discountAmount > 0) {
                $('#discountAmountDisplay').text('-' + response.discountAmount.toLocaleString() + ' ‚Ç´');
                $('#discountRow').show();
            } else {
                $('#discountRow').hide();
            }
        }

        // Show applied coupon section
        function showAppliedCoupon(couponCode, response) {
            // This will be handled by page reload for now
            // In a more advanced implementation, you could update the DOM directly
        }

        // Show coupon message
        function showCouponMessage(message, type) {
            var alertClass = type === 'success' ? 'alert-success' :
                           type === 'error' ? 'alert-danger' : 'alert-info';

            $('#couponMessage')
                .removeClass('alert-success alert-danger alert-info')
                .addClass('alert ' + alertClass)
                .html(message)
                .slideDown();
        }

        // Hide coupon message
        function hideCouponMessage() {
            $('#couponMessage').slideUp();
        }
    </script>
}