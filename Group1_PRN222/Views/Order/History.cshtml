@model List<Group1_PRN222.Models.OrderTable>
@{
    ViewData["Title"] = "L·ªãch s·ª≠ ƒë∆°n h√†ng";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalOrders = ViewBag.TotalOrders ?? 0;
}

<div class="container mt-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Trang ch·ªß</a></li>
                    <li class="breadcrumb-item"><a href="/Account/Edit/@(ViewContext.HttpContext.Session.GetInt32("UserId"))">T√†i kho·∫£n</a></li>
                    <li class="breadcrumb-item active">ƒê∆°n h√†ng c·ªßa t√¥i</li>
                </ol>
            </nav>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold mb-1">üì¶ ƒê∆°n h√†ng c·ªßa t√¥i</h2>
                    <p class="text-muted">Qu·∫£n l√Ω v√† theo d√µi t·∫•t c·∫£ ƒë∆°n h√†ng c·ªßa b·∫°n</p>
                </div>
                <div class="text-end">
                    <div class="bg-light rounded p-2">
                        <strong>@totalOrders</strong>
                        <small class="text-muted d-block">ƒë∆°n h√†ng</small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="row mb-4">
        <div class="col-md-3 col-6 mb-3">
            <div class="card bg-warning bg-opacity-10 border-warning">
                <div class="card-body text-center">
                    <div class="fs-4">‚è≥</div>
                    <div class="fw-bold">@Model.Count(o => o.Status == "Pending")</div>
                    <small class="text-muted">Ch·ªù x·ª≠ l√Ω</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="card bg-info bg-opacity-10 border-info">
                <div class="card-body text-center">
                    <div class="fs-4">üöö</div>
                    <div class="fw-bold">@Model.Count(o => o.Status == "Shipping")</div>
                    <small class="text-muted">ƒêang giao</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="card bg-success bg-opacity-10 border-success">
                <div class="card-body text-center">
                    <div class="fs-4">‚úÖ</div>
                    <div class="fw-bold">@Model.Count(o => o.Status == "Delivered")</div>
                    <small class="text-muted">ƒê√£ giao</small>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6 mb-3">
            <div class="card bg-danger bg-opacity-10 border-danger">
                <div class="card-body text-center">
                    <div class="fs-4">‚ùå</div>
                    <div class="fw-bold">@Model.Count(o => o.Status == "Cancelled")</div>
                    <small class="text-muted">ƒê√£ h·ªßy</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Tabs -->
    <div class="row mb-4">
        <div class="col-12">
            <ul class="nav nav-tabs" id="orderTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all"
                            type="button" role="tab">
                        üìã T·∫•t c·∫£ (@totalOrders)
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending"
                            type="button" role="tab">
                        ‚è≥ Ch·ªù x·ª≠ l√Ω (@Model.Count(o => o.Status == "Pending"))
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="shipping-tab" data-bs-toggle="tab" data-bs-target="#shipping"
                            type="button" role="tab">
                        üöö ƒêang giao (@Model.Count(o => o.Status == "Shipping"))
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="delivered-tab" data-bs-toggle="tab" data-bs-target="#delivered"
                            type="button" role="tab">
                        ‚úÖ ƒê√£ giao (@Model.Count(o => o.Status == "Delivered"))
                    </button>
                </li>
            </ul>
        </div>
    </div>

    <!-- Orders List -->
    <div class="tab-content" id="orderTabsContent">
        <div class="tab-pane fade show active" id="all" role="tabpanel">
            @if (Model != null && Model.Any())
            {
                @foreach (var order in Model)
                {
                    <div class="card shadow-sm mb-4 order-card" data-status="@order.Status.ToLower()">
                        <div class="card-header">
                            <div class="row align-items-center">
                                <div class="col-md-3">
                                    <h6 class="mb-1">
                                        <strong>ƒê∆°n h√†ng #@order.Id</strong>
                                    </h6>
                                    <small class="text-muted">@order.OrderDate?.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                                <div class="col-md-3">
                                    @{
                                        var statusClass = order.Status switch
                                        {
                                            "Pending" => "bg-warning text-dark",
                                            "Confirmed" => "bg-info text-white",
                                            "Shipping" => "bg-primary text-white",
                                            "Delivered" => "bg-success text-white",
                                            "Cancelled" => "bg-danger text-white",
                                            _ => "bg-secondary text-white"
                                        };

                                        var statusIcon = order.Status switch
                                        {
                                            "Pending" => "‚è≥",
                                            "Confirmed" => "‚úîÔ∏è",
                                            "Shipping" => "üöö",
                                            "Delivered" => "‚úÖ",
                                            "Cancelled" => "‚ùå",
                                            _ => "üì¶"
                                        };

                                        var statusText = order.Status switch
                                        {
                                            "Pending" => "Ch·ªù x·ª≠ l√Ω",
                                            "Confirmed" => "ƒê√£ x√°c nh·∫≠n",
                                            "Shipping" => "ƒêang giao h√†ng",
                                            "Delivered" => "ƒê√£ giao h√†ng",
                                            "Cancelled" => "ƒê√£ h·ªßy",
                                            _ => order.Status
                                        };
                                    }
                                    <span class="badge @statusClass">
                                        @statusIcon @statusText
                                    </span>
                                </div>
                                <div class="col-md-3 text-md-center">
                                    <div class="fw-bold text-danger fs-5">
                                        @order.TotalPrice?.ToString("N0") ‚Ç´
                                    </div>
                                    @if (order.Payments?.Any() == true)
                                    {
                                        var payment = order.Payments.First();
                                        <small class="text-muted">
                                            @(payment.Method == "COD" ? "üí∞ COD" : "üí≥ " + payment.Method)
                                        </small>
                                    }
                                </div>
                                <div class="col-md-3 text-md-end">
                                    <div class="btn-group">
                                        <a href="/Order/Details/@order.Id" class="btn btn-outline-primary btn-sm">
                                            üëÅÔ∏è Chi ti·∫øt
                                        </a>
                                        @if (order.Status == "Pending")
                                        {
                                            <button type="button" class="btn btn-outline-danger btn-sm"
                                                    onclick="cancelOrder(@order.Id)">
                                                ‚ùå H·ªßy
                                            </button>
                                        }
                                        @if (order.Status == "Delivered")
                                        {
                                            <a href="/Order/Return/@order.Id" class="btn btn-outline-warning btn-sm">
                                                üîÑ Tr·∫£ h√†ng
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <!-- Order Items Preview -->
                                <div class="col-md-8">
                                    <div class="row">
                                        @if (order.OrderItems?.Any() == true)
                                        {
                                            @foreach (var item in order.OrderItems.Take(3))
                                            {
                                                <div class="col-md-4 mb-2">
                                                    <div class="d-flex align-items-center">
                                                        @if (!string.IsNullOrEmpty(item.Product?.Images))
                                                        {
                                                            var images = item.Product.Images.Split(',');
                                                            <img src="@images.First()" alt="@item.Product.Title"
                                                                 class="rounded me-2" style="width: 50px; height: 50px; object-fit: cover;">
                                                        }
                                                        else
                                                        {
                                                            <div class="bg-light rounded me-2 d-flex align-items-center justify-content-center"
                                                                 style="width: 50px; height: 50px;">
                                                                üì¶
                                                            </div>
                                                        }
                                                        <div class="flex-grow-1">
                                                            <h6 class="mb-1 text-truncate" style="max-width: 150px;">
                                                                @item.Product?.Title
                                                            </h6>
                                                            <small class="text-muted">
                                                                SL: @item.Quantity √ó @item.UnitPrice?.ToString("N0") ‚Ç´
                                                            </small>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            @if (order.OrderItems.Count > 3)
                                            {
                                                <div class="col-md-4 mb-2">
                                                    <div class="text-center text-muted">
                                                        <small>+ @(order.OrderItems.Count - 3) s·∫£n ph·∫©m kh√°c</small>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>

                                <!-- Shipping Info -->
                                <div class="col-md-4">
                                    @if (order.ShippingInfos?.Any() == true)
                                    {
                                        var shipping = order.ShippingInfos.First();
                                        <div class="border-start border-2 border-primary ps-3">
                                            <h6 class="mb-1">üöõ Th√¥ng tin v·∫≠n chuy·ªÉn</h6>
                                            <p class="mb-1">
                                                <strong>@shipping.Carrier</strong>
                                            </p>
                                            @if (!string.IsNullOrEmpty(shipping.TrackingNumber))
                                            {
                                                <p class="mb-1">
                                                    <small class="text-muted">M√£ v·∫≠n ƒë∆°n:</small><br>
                                                    <code>@shipping.TrackingNumber</code>
                                                </p>
                                            }
                                            @if (shipping.EstimatedArrival.HasValue)
                                            {
                                                <p class="mb-0">
                                                    <small class="text-muted">D·ª± ki·∫øn giao:</small><br>
                                                    <small>@shipping.EstimatedArrival?.ToString("dd/MM/yyyy")</small>
                                                </p>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-muted">
                                            <small>Ch∆∞a c√≥ th√¥ng tin v·∫≠n chuy·ªÉn</small>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Delivery Address -->
                            @if (order.Address != null)
                            {
                                <hr class="my-3">
                                <div class="row">
                                    <div class="col-12">
                                        <small class="text-muted">üìç ƒê·ªãa ch·ªâ giao h√†ng:</small>
                                        <p class="mb-0">
                                            <strong>@order.Address.FullName</strong> - @order.Address.Phone<br>
                                            @order.Address.Street, @order.Address.City, @order.Address.Country
                                        </p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <!-- Empty State -->
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="fas fa-shopping-bag fa-4x text-muted"></i>
                    </div>
                    <h4 class="text-muted">Ch∆∞a c√≥ ƒë∆°n h√†ng n√†o</h4>
                    <p class="text-muted mb-4">B·∫°n ch∆∞a th·ª±c hi·ªán ƒë∆°n h√†ng n√†o. H√£y kh√°m ph√° c√°c s·∫£n ph·∫©m tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i!</p>
                    <a href="/Product" class="btn btn-primary">
                        üõçÔ∏è Mua s·∫Øm ngay
                    </a>
                </div>
            }
        </div>
    </div>

    <!-- Pagination -->
    @if (totalPages > 1)
    {
        <div class="row mt-4">
            <div class="col-12">
                <nav aria-label="Order pagination">
                    <ul class="pagination justify-content-center">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(currentPage - 1)">¬´ Tr∆∞·ªõc</a>
                            </li>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(currentPage + 1)">Sau ¬ª</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>

<!-- Cancel Order Modal -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">‚ùå H·ªßy ƒë∆°n h√†ng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë∆°n h√†ng <strong id="cancelOrderId"></strong>?</p>
                <div class="alert alert-warning">
                    <strong>‚ö†Ô∏è L∆∞u √Ω:</strong>
                    <ul class="mb-0">
                        <li>ƒê∆°n h√†ng ƒë√£ h·ªßy kh√¥ng th·ªÉ kh√¥i ph·ª•c</li>
                        <li>Ti·ªÅn s·∫Ω ƒë∆∞·ª£c ho√†n l·∫°i trong 3-5 ng√†y l√†m vi·ªác (n·∫øu ƒë√£ thanh to√°n)</li>
                        <li>S·∫£n ph·∫©m s·∫Ω ƒë∆∞·ª£c tr·∫£ l·∫°i kho</li>
                    </ul>
                </div>
                <div class="mb-3">
                    <label class="form-label">L√Ω do h·ªßy ƒë∆°n (t√πy ch·ªçn):</label>
                    <select class="form-select" id="cancelReason">
                        <option value="">-- Ch·ªçn l√Ω do --</option>
                        <option value="ƒê·ªïi √Ω kh√¥ng mu·ªën mua">ƒê·ªïi √Ω kh√¥ng mu·ªën mua</option>
                        <option value="T√¨m ƒë∆∞·ª£c gi√° t·ªët h∆°n">T√¨m ƒë∆∞·ª£c gi√° t·ªët h∆°n</option>
                        <option value="ƒê·∫∑t nh·∫ßm s·∫£n ph·∫©m">ƒê·∫∑t nh·∫ßm s·∫£n ph·∫©m</option>
                        <option value="Thay ƒë·ªïi ƒë·ªãa ch·ªâ giao h√†ng">Thay ƒë·ªïi ƒë·ªãa ch·ªâ giao h√†ng</option>
                        <option value="Kh√°c">Kh√°c</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                <button type="button" id="confirmCancelOrder" class="btn btn-danger">H·ªßy ƒë∆°n h√†ng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Tab filtering
            $('#orderTabs button[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                var target = $(e.target).attr('data-bs-target');
                var status = target.replace('#', '');

                if (status === 'all') {
                    $('.order-card').show();
                } else {
                    $('.order-card').hide();
                    $('.order-card[data-status="' + status + '"]').show();
                }
            });
        });

        // Cancel order functionality
        let orderToCancel = null;

        function cancelOrder(orderId) {
            orderToCancel = orderId;
            $('#cancelOrderId').text('#' + orderId);
            $('#cancelOrderModal').modal('show');
        }

        $('#confirmCancelOrder').click(function() {
            if (!orderToCancel) return;

            var reason = $('#cancelReason').val();

            $.ajax({
                url: '/Order/Cancel',
                type: 'POST',
                data: {
                    id: orderToCancel,
                    reason: reason,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    $('#cancelOrderModal').modal('hide');

                    if (response.success) {
                        alert('‚úÖ ' + response.message);
                        location.reload(); // Refresh page to show updated status
                    } else {
                        alert('‚ùå ' + response.message);
                    }
                },
                error: function(xhr, status, error) {
                    $('#cancelOrderModal').modal('hide');
                    alert('‚ùå C√≥ l·ªói x·∫£y ra khi h·ªßy ƒë∆°n h√†ng. Vui l√≤ng th·ª≠ l·∫°i!');
                    console.error('Error:', error);
                }
            });
        });

        // Add anti-forgery token if not exists
        if (!$('input[name="__RequestVerificationToken"]').length) {
            $('body').append('@Html.AntiForgeryToken()');
        }

        // Auto-refresh every 30 seconds for shipping updates
        setInterval(function() {
            // Only refresh if user is viewing pending or shipping orders
            var activeTab = $('#orderTabs .nav-link.active').attr('id');
            if (activeTab === 'pending-tab' || activeTab === 'shipping-tab') {
                // Silent refresh via AJAX to check for status updates
                $.get(window.location.href + '?ajax=1')
                    .done(function(data) {
                        // Compare and update if needed - implementation depends on requirements
                    });
            }
        }, 30000);
    </script>
}